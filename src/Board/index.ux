
<import name="loading-progress-view" src="../Comp/LoadingProgressView"></import>


<template>
  <div class="board-page">

    <stack>

        <div class="page">
          <div class="board-top-bar">
              <div class="foruminfo-title">

                <text class="title  {{boardIndex == 0 ? 'active' : '' }}" onclick="onClickBoard" idx="0">{{forumInfo.title}}</text>

              </div>

                <list id="child-board" class="child-boards">
                <block for="(i,b) in boardList">

                  <list-item type="child-board-name">
                      <text class="board-name {{boardIndex == (i+1) ? 'active' : '' }}"  onclick="onClickBoard" idx="{{i+1}}">{{b.board_name}}</text>
                  </list-item>

                </block>
              </list>
          </div>

          <tabs onchange="changeTabBoard"  index="{{boardIndex}}" class="board-content">
              <tab-content >
                <block for="(i,l) in list">

                    <div class="tab-content">

                      <refresh @refresh="reqRefresh(i)" refreshing="{{l.isRefreshing}}">
                        <list onscrollbottom="loadMore(i)">


                          <block  for="{{l.postlist}}">


                            <list-item type="post-item-board">
                                <text class="board-name">{{$item.board_name}}</text>
                            </list-item>

                            <list-item type="post-item-header" class="header">
                              <img class="avatar" src="{{$item.userAvatar}}" alt="../Common/logo.png"/>
                              <div class="header-text">
                                <text class="user-nike-name">{{$item.user_nick_name}}</text>
                                <text class="title" onclick="onClickPost" topicid="{{$item.topic_id == null ? $item.source_id : $item.topic_id}}">{{$item.title}}</text>
                                <text class="date" >{{$item.last_reply_date}}</text>
                              </div>

                            </list-item>
                            <list-item type="post-item-subject"  >
                              <text class="subject" @click="onClickPost" topicid="{{$item.topic_id}}">{{$item.subject}}</text>
                            </list-item>
                            <list-item type="post-item-hnr">
                              <div class="hnr">
                                <text class="hit">hits: {{$item.hits}}</text>
                                <text class="replycount">re : {{$item.replies}}</text>
                              </div>
                            </list-item>
                            <list-item type="post-item-footer" >
                              <text class="item-footer"></text>
                            </list-item>
                          </block>


                          <list-item type="loadMore" >

                              <loading-progress-view ></loading-progress-view>
                          </list-item>
                        </list>

                      </refresh>

                    </div>
                </block>
              </tab-content>

          </tabs>

    </div>


        <div class="float-bar">
          <div  class="btn-action {{deFloatBar ? 'active' : '' }}" @click="onClickFloatBar">
              <text  @click="onClickNew">new</text>
              <div  class="close-action-bar" show="{{deFloatBar}}"></div>
          </div>
        </div>
    </stack>


  </div>
</template>


<style lang="less">

  .board-page{
        flex-direction: column;




        stack{
          height: 100%;
          flex-direction: column;
          justify-content: flex-end;
          align-items: flex-end;

        }

        .page{

              height: 100%;
              width: 100%;
              flex-direction: column;



              .board-top-bar {
                height: 100px;
                width: 100%;
                flex-direction: row;

                      .foruminfo-title {
                            height: 100%;
                            width: 20%;


                            .title {
                              padding: 10px;
                              color: #ffbc4d;
                              border-right-width: 2px;
                              border-color: #ffbc4d;
                            }

                            .active{
                              color : #00bcd4;
                              font-size: 40px;
                              border-right-width: 0px;
                            }


                        }

                    .child-boards{
                          flex-direction: row;

                          text {
                            margin: 16px;
                          }


                          .active{
                            color : #00bcd4;
                            font-size: 40px;
                            border-right-width: 0px;
                          }

                    }

              }

              .board-content {
                    height: 100%;

                    .tab-content{
                          height: 100%;


                          list{
                              height: 100%;

                              .board-name{
                                width: 100%;
                                text-align: right;
                                font-size: 20px;
                                text-align: right;
                                color: #333333;
                              }

                              .header{
                                flex-direction: row;
                                margin-bottom: 16px;

                                .avatar{
                                    width: 64px;
                                    height :64px;
                                    margin: 8px;
                                }


                                div{
                                  flex-direction: column;
                                }

                                .title{

                                }

                                .user-nike-name{
                                  width: 70%;
                                  color: #aabcd4;
                                  font-size: 30px;
                                }

                                .date{
                                  font-size: 30px;
                                  color: #ffbc4d;
                                }
                          }



                          .subject{
                            padding: 8px;
                            margin-left: 64px;
                          }

                          .hnr{
                            width: 100%;
                            flex-direction: row;
                            align-items: flex-end;
                            justify-content: flex-end;

                            text{
                              padding: 16px;
                            }
                            .hit{
                              color :#00bcd4;
                            }

                            .replycount{
                              color : #ffbcd4;
                            }
                          }

                          .item-footer{
                            height: 1px;
                            width: 90%;
                            background-color: #ffbc4d;
                          }



                        }
                    }
              }

        }


        .float-bar{
              margin-bottom:148px;
              margin-right: 16px;

              .btn-action{
                    flex-direction: row;
                    margin-right :16px;

                    background-color: #00bcd4;
                    height: 40px;
                    width: 40px;
                    border-width: 40px;
                    border-color: #00abc3;
                    border-radius: 40px;

                    text{
                      color: #ffffff;
                      flex-grow: 1;
                      text-align: center;
                    }

                    .close-action-bar{
                      background-color: #ffffff;
                      height: 30px;
                      width: 30px;
                      border-width: 10px;

                      border-color: #ffffff;
                      border-radius: 15px;
                    }
              }

              .active{
                width: 200px;
                height:80px;
                border-width: 10px;
              }
        }
  }


</style>

<script>

  import BoardApi from '../Common/BoardApi'
  import DateUtil from '../Common/DateUtil'
  import router from '@system.router'
  import prompt from '@system.prompt'

  export default{
    protected :{
      boardId :"",
      list : [{
        page :0,
        postlist :[],
        canLoadMore :true,
        isRefreshing :false,
        pro_show : true,
        pro_msg : ""
      }],
      forumInfo :{
        title : ""
      },
      boardList : [],
      boardIndex :0,
      deFloatBar :false

    },
    onInit(){
      BoardApi.init(this.$app)
    },
    onShow(){
      this.refresh()
    },
    onClickBoard(e){
      const index = e.target.attr.idx

      this.onChangeBoard(index)
    },
    onClickPost(a){
      // console.log("click : " + a.target.attr.topicid);

      router.push({
        uri : 'Post/Detail',
        params : {
          topicid : a.target.attr.topicid
        }
      })

    },
    onClickFloatBar(){
      this.deFloatBar = this.deFloatBar ? false : true
    },
    onClickNew(){
      router.push({
        uri : "Post/Write"
      })
    },
    onChangeBoard(index){

      if(this.boardIndex != index){

        this.boardIndex = index

        let listview = this.$element("child-board")

        listview.scrollTo({
          index : index-1
        })


        if(this.list[index].page <1)
          this.fetchBoardPostList(index)
      }

    },
    changeTabBoard(e){

        const index = e.index
        this.onChangeBoard(index)

    },
    convertList(list){

       for(let x in  list){
         let time =  list[x].last_reply_date
          list[x].last_reply_date = DateUtil.convertTime(time)
       }

    },
    refresh(){
      this.fetchClassificationTypeList()
    },
    renderPost(index,list){
        this.convertList(list)
        this.list[index].postlist = list
        this.list[index].page = this.list[index].page+1

        if(this.list[index].isRefreshing){
          this.refreshComplete(index)
        }

    },
    renderMorePost(index,list){
       this.convertList(list)

       this.list[index].postlist = this.list[index].postlist.concat(list)
       this.list[index].page = this.list[index].page+1

       this.loadMoreComplete(index)
    },
    reqRefresh(i,e){
      this.list[i].isRefreshing = e.refreshing
      this.list[i].page = 0
      this.fetchBoardPostList(i)
    },
    refreshComplete(i){
      this.list[i].isRefreshing = false

      prompt.showToast({
          message: 'refresh complete'
      })
    },
    fetchClassificationTypeList(){

      BoardApi.fetchClassificationTypeList(this.boardId,
        function (data){
          const re = JSON.parse(data.data)


          this.forumInfo = re.forumInfo
          this.renderPost(0,re.list)

          this.loadChild()

        }.bind(this))
    },
    fetchBoardPostList(boardIndex){


        //先根据传进来的board索引，转换成对应的id
        let boardId = this.boardId

        if(boardIndex > 0)
          boardId = this.boardList[boardIndex-1].board_id



        //同样获取page
        let requestPage = this.list[boardIndex].page +1

        console.log(JSON.stringify(this.list) );
        //现在有对应的boardid和page了 ，就根据id和page获取对应的postlist



        //callback
        var success = function (re){


          if(re.rs == 1){


              if(requestPage>1){
                        console.log("success");

                this.renderMorePost(boardIndex,re.list)
              } else{
                this.renderPost(boardIndex,re.list)
              }

          }


        }.bind(this)


        //进行请求数据
        BoardApi.fetchBoardPostList(
          requestPage,
          boardId,
          success)

    },
    loadChild(){
      BoardApi.fetchChildBoardList(this.forumInfo.id,
        function (re){
          if(re.list.length > 0){

            this.boardList = re.list[0].board_list
          }

          this.loadChildComplete()
        }.bind(this))
    },
    loadChildComplete(){

      this.initList()

    },
    loadMore(index){
      let that = this.list[index]
      if(that.canLoadMore){
        that.canLoadMore = false
        that.page = that.page+1

                console.log("success");
        this.fetchBoardPostList(index)

      }
    },
    loadMoreComplete(index){
      this.list[index].canLoadMore = true
    },
    initList(){

      for(let x in this.boardList){
        this.list.push({
          page :0,
          postlist :[],
          canLoadMore :true,
          isRefreshing :false,
          pro_show : true,
          pro_msg : ""
        })
      }
    },


  }

</script>
