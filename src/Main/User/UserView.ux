
<import name="user-list-view" src="../../Comp/UserListView"></import>

<import name="post-list-view" src="../../Comp/PostListView"></import>


<template>


    <div class="user-page"  >
        <block for="userInfo in re">
            <stack class="user-header">

                <image class="user-image" src="{{avatarBig}}"></image>
                <div class="user-info">
                        <div >

                            <text class="name">{{userInfo.name}}</text>
                            <text class="title">{{userInfo.userTitle}}</text>
                        </div>
                        <text class="sign">{{userInfo.sign}}</text>


                        <div>

                            <block for=" c in userInfo.body.creditShowList">
                                <text>{{c.title}} : {{c.data}}</text>
                            </block>
                        </div>



                </div>

            </stack>


            <div class="others-content" if="{{uid != myId}}">
                <tabs @change="onChangeTab" index="{{tabIndex}}">
                    <tab-bar class="tab-bar">
                        <text class="{{ tabIndex === 0 ?'tab-title' : ''}}">Ta的发帖</text>
                        <text class="{{ tabIndex === 1 ?'tab-title' : ''}}">其他资料</text>
                    </tab-bar>
                    <tab-content >
                        <div >

    <post-list-view type="me-publish" tag="{{uid}}"  ></post-list-view>
                        </div>
                        <div class="">
                            <!-- NOTE: 回复,关注,粉丝 -->
                            <div class="user-second-info card">

                                    <div  class="info-active-item"
                                        @click="onClickEvent('replycount',uid)">
                                        <text class="info-value">{{replyTotalNumber}}</text>
                                        <text class="info-title"> 参与 </text>
                                    </div>
                                    <text>|</text>
                                    <div  class="info-active-item"

                                     @click="onClickEvent('lookfollow',uid)"  >
                                        <text class="info-value">{{followNumber}}</text>
                                        <text class="info-title"> 关注 </text>
                                    </div>
                                    <text>|</text>

                                    <div  class="info-active-item" >
                                        <text class="info-value">{{followerNumber}}</text>
                                        <text class="info-title"> 粉丝 </text>
                                    </div>

                            </div>


                           <div class="blank-item">

                           </div>
                        </div>
                    </tab-content>
                </tabs>

                <div class="others-action-bar">
                    <text @click="onClickEvent('chat')" class="others-action-btn">站内私信</text>
                    <text if="{{re.length >0 &&re[0].isFriend == 0}}" @click="onClickEvent('addFriend')" class="others-action-btn">加为好友</text>
                    <text if="{{re.length >0 &&re[0].isFriend == 1}}" @click="onClickEvent('unFriend')" class="others-action-btn">删除好友</text>
                    <text if="{{re.length >0 &&re[0].is_follow == 0}}" @click="onClickEvent('follow')" class="others-action-btn">加为关注</text>
                    <text if="{{re.length >0 &&re[0].is_follow == 1}}" @click="onClickEvent('unfollow')" class="others-action-btn">取消关注</text>
                </div>
            </div>

            <div class="self-content" if="{{uid == myId }}" >
                <tabs @change="onChangeTab" index="{{tabIndex}}">
                     <tab-bar class="tab-bar">
                       <text class="{{ tabIndex === 0 ?'tab-title' : ''}}">我的发帖</text>
                       <text class="{{ tabIndex === 1 ?'tab-title' : ''}}">我的好友</text>
                       <text class="{{ tabIndex === 2 ?'tab-title' : ''}}">其他设置</text>
                     </tab-bar>
                     <tab-content class="tab-content">

                       <div class="post">
                                <post-list-view type="me-publish" tag="{{uid}}"  ></post-list-view>
                       </div>
                       <div  >

                               <user-list-view uid="{{uid}}" tag="friend"></user-list-view>

                       </div>
                       <div class="other-settings">

                           <!-- NOTE: 回复,关注,粉丝 -->
                           <div class="user-second-info card">

                                   <div  class="info-active-item"
                                       @click="onClickEvent('replycount',uid)">
                                       <text class="info-value">{{replyTotalNumber}}</text>
                                       <text class="info-title"> 参与 </text>
                                   </div>
                                   <text>|</text>
                                   <div  class="info-active-item"
                                    @click="onClickEvent('lookfollow',uid)"  >
                                       <text class="info-value">{{followNumber}}</text>
                                       <text class="info-title"> 关注 </text>
                                   </div>
                                   <text>|</text>

                                   <div  class="info-active-item" >
                                       <text class="info-value">{{followerNumber}}</text>
                                       <text class="info-title"> 粉丝 </text>
                                   </div>

                           </div>

                           <div class="blank-item">

                           </div>
                           <input class="btn-logout card " type="button" @click="onClickEvent('logout')" value="注销"></input>
                       </div>
                     </tab-content>
               </tabs>
            </div>
        </block>
    </div>

</template>

<style lang="less">




    .user-page{


                background-color: #eeeeee;
                width: 100%;
                flex-direction: column;

                .user-header{
                    height: 38%;
                    width: 100%;
                    flex-direction: column;
                    justify-content: flex-end;
                    align-items: flex-end;

                    .user-image{
                        height: 100%;
                        width: 100%;
                        resize-mode :cover;
                        opacity: 0.9;
                    }

                    .user-info{
                        flex-direction: column;
                        padding-top: 32px;
                        width: 100%;
                        padding-bottom: 32px;
                        background: linear-gradient(to top,rgba(0,0,0,0.3),rgba(0,0,0,0.0));

                        text{
                            color:#ffffff;

                            font-weight: bold;
                            padding: 16px;
                        }

                        .name {
                            font-size: 64px;
                        }


                        .title{
                            font-size: 32px;

                        }


                    }

                }



                .card{
                    width: 100%;
                    background-color: #ffffff;
                    margin-left: 16px;
                    margin-right:16px;
                }

                .blank-item{
                    flex-grow: 1;
                }

                tab-bar{
                    background-color:#ffffff;

                    text{

                        text-align: center;
                    }
                }



                .tab-title{
                    font-size: 48px;
                    padding: 8px;
                    margin: 16px;
                }



                .user-second-info{
                    width: 100%;

                    padding: 8px;
                    align-items: center;
                    justify-content: center;
                    margin-top : 8px;

                    margin-left: 0px;
                    margin-right: 0px;

                    .info-active-item{
                        flex-direction: column;
                        align-items: center;
                        justify-content: center;
                        padding: 16px;


                        .info-title{
                            padding: 8px;
                            padding-top: 0px;
                            font-weight: bold;

                        }

                        .info-value{

                            padding: 8px;
                            padding-bottom: 0px;
                        }
                    }

                    text{
                        color:#333333;
                    }


                }



                .others-content{

                    height: 100%;
                    flex-direction: column;

                    tabs{
                        flex-grow: 1;
                    }

                    .others-action-bar{

                        background-color: #ffffff;

                        .others-action-btn{
                            flex-grow: 1;
                            text-align: center;
                            padding: 16px;
                            color: #ffbc4d;
                            border-width: 4px;
                            border-color: #ffbc4d;
                            border-radius: 16px;
                            margin: 8px;
                        }

                    }

                }

                .self-content{
                    flex-direction: column;
                    justify-content: flex-end;



                    .other-settings{
                        flex-direction: column;
                        justify-content: flex-end;



                        .btn-logout{

                            height: 100px;
                            text-align: center;
                            color: #ff645e;
                            padding: 16px;
                            margin-left: 0px;
                            margin-right: 0px;
                            margin-bottom: 16px;
                        }
                    }

                }

            }


</style>

<script >


    import prompt from '@system.prompt'
    import router from '@system.router'
    import DateUtil from '../../Common/DateUtil'
    import UserApi from "../../Common/UserApi"
    import MessageApi from "../../Common/MessageApi"
    import UserCache from "../../Common/UserCache"


    export default{
        props:[
            'uid'
        ]
        ,data :{

            re :[],
            myId : 0,
            avatarBig :"",
            friendList :[],
            tabIndex :0,
            page :0,
            postlist :[],
            canLoadMore :true,
            isRefreshing :false,
            replyPostList:[],
            replyPage:0,
            replyTotalNumber :0,
            followNumber:0,
            followerNumber:0
        }
        ,initInfo(){
            UserApi.getUserInfo(
                this.uid,
                function(re){
                    this.re = []
                    this.re.push(re)

                }.bind(this)
            )

            this.avatarBig = UserApi.getUserAvatarBig(this.uid)

            //自己
            if(this.myId == this.uid){

                this.initSelf()

            }else{//不是自己

                this.initPosts()
            }

        }
        ,initPosts(){



            //NOTE: 或取回复过的帖子
            UserApi.getUserReplyPost(this.uid,1,10,
                function(re){
                    this.replyTotalNumber = re.total_num
                }.bind(this)
            )


            // NOTE : 或取关注了的人
            UserApi.getFollows(this.uid,1,
                function(re){
                    console.info(JSON.stringify(re))
                    this.followNumber = re.total_num
                }.bind(this)
            )
        }
        ,initSelf(){
            UserApi.getFirends(this.uid,
                function(re){
                    this.friendList = re.list
                }.bind(this))

            this.initPosts()
        }
        ,onChangeTab(e){
            var index = e.index;
            this.tabIndex = index;
        }
        ,onClickEvent(type,arg){

            //NOTE : 关注 follow
            if(type == 'follow'){
                var onFollowSuccess = function(re){
                    prompt.showToast({
                        message : re.errcode
                    })
                    this.initInfo()
                }.bind(this)
                UserApi.follow(this.uid,
                onFollowSuccess)
            }

            //NOTE : 取消关注
            if(type =='unfollow'){
                var onUnFollowSuccess = function(re){
                    prompt.showToast({
                        message : re.errcode
                    })
                    this.initInfo()
                }.bind(this)

                UserApi.unFollow(this.uid,
                    onUnFollowSuccess)
            }

            //NOTE : 添加好友事件
            if(type== 'addFriend'){
                UserApi.addFriend(this.uid
                    ,function(re){
                        prompt.showToast({
                            message:re.errcode
                        })
                        this.initInfo()
                    }.bind(this))
            }

            // NOTE: 删除好友事件
            if(type == 'unFriend'){
                UserApi.deleteFriend(this.uid
                    ,function(re){
                        prompt.showToast({
                            message:"删除成功"
                        })
                        this.initInfo()
                    }.bind(this))
            }

            // NOTE : 站内私信
            if(type == 'chat'){
                var success = function(re){

                  router.push({
                    uri :"Main/Message/PmList",
                    params :{
                      re :re
                    }
                  })
                }

                MessageApi.fetchPmseMissionList(
                   this.uid,
                   0,
                   0,
                   success)
            }

            // NOTE : 登出
            if(type == 'logout'){
                prompt.showDialog({
                        title: "要退出了吗..",
                        message : '吗吗吗???',
                        buttons: [
                        {
                            text :'登出',
                            color :'#ffbc4d'
                        },
                        {
                            text : '按错了',
                            color : '#00bcd4'
                        }
                        ],
                        success :function (data){

                        switch(data.index){
                            case 0 :

                                UserCache.logout()
                                router.replace({
                                    uri : "Start/Login",
                                })
                            break;
                            case 1 :

                            break;
                            case 2 :
                            break;
                        }
                        },
                        fail :function(data){
                        prompt.showToast({
                            message : "未知错误"
                        })
                        }
                    })
            }


            // NOTE : 查看参与
            if(type == 'replycount'){
                router.push({
                  uri : 'Main/User/Reply',
                  params : {
                      uid :arg
                  }
                })
            }

            // NOTE : 查看关注的人
            if(type == 'lookfollow'){
                router.push({
                  uri : 'Main/User/Follow',
                  params : {
                      uid :arg,
                      tag : "follow"
                  }
                })
            }
        }
        ,onInit(){
            UserApi.init(this.$app)
            this.myId = UserApi.user().uid

            this.initInfo()

        }
    }

</script>
