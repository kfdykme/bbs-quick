<import name="loading-progress-view" src="../../Comp/LoadingProgressView"></import>

<template>

  <div class="post-page">

    <stack>

      <div class="post-content">
        <text class="title">{{topic.title}}</text>

        <refresh @refresh="reqRefresh" refreshing="{{isRefreshing}}">
          <list @scrollbottom="onScrollBottom">


            <list-item type="topic-header">
              <image class="avatar" src="{{topic.icon}}" />

              <div class="header-text">

                <text class="name">{{topic.user_nick_name}}</text>
                <text class="date">{{topic.create_date}}</text>
              </div>
            </list-item>


            <block for="{{topic.content}}">

              <block if="{{$item.type  == 0 }}">
                <list-item type="topic-text" >
                  <text class="content">{{$item.infor}}</text>
                </list-item>
              </block>

              <block if="{{$item.type  == 1 }}">

                <list-item type="topic-image" >
                  <a class="content " href="{{$item.originalInfo}}">{{$item.originalInfo}}</a>
                  <!-- alt="../../Common/logo.png"/> -->
                </list-item>

              </block>


            </block>

            <list-item type="topic-footer" show="{{topic.content.length != 0}}">
              <text class="topic-footer"></text>
            </list-item>



            <block for="(index,re) in list">


              <list-item type="reply-header">
                <image class="avatar" src="{{re.icon}}"/>

                <div class="header-text">

                  <text class="name">{{re.reply_name}}</text>
                  <text class="date">{{re.posts_date}}</text>
                </div>
              </list-item>

              <block if="{{re.quote_content != ''}}">
                <list-item type="reply-quote">
                  <div class="reply-quote content">
                    <text>{{re.quote_content}}</text>
                  </div>
                </list-item>
              </block>

              <block for="{{re.reply_content}}">

                <list-item type="reply-text" if="{{$item.type  == 0 }}">
                  <text class="content">{{$item.infor}}</text>
                </list-item>
                <list-item type="reply-image" if="{{$item.type  == 1 }}">
                  <image class="content"  src="{{$item.originalInfo}}"/>
                </list-item>
                <list-item type="image-type4" if="{{$item.type  == 4 }}">
                  <a class="content" href="{{$item.url}}">{{$item.infor}}</a>
                </list-item>
              </block>



              <list-item type="reply-footer">
                <div class="reply-footer content">
                  <div class="reply-action">

                        <div  class="btn-action {{list[index].showAct != null && list[index].showAct ? 'active' : '' }}" @click="onClickReplyAction(index)">
                            <text  @click="replyComment(index)">reply</text>
                            <div  class="close-action-bar" show="{{re.showAct}}"></div>
                        </div>

                  </div>
                  <div class="reply-exinfo">

                    <text class="reply-support" >sup: {{re.extraPanel[0].extParams.recommendAdd}}</text>
                    <text class="reply-position">#{{re.position}}</text>
                  </div>

                  <text class="line"></text>
                </div>
              </list-item>



            </block>
            <list-item type="loadMore" class="load-more" >
              <loading-progress-view isShow="{{pro_show}}" msg="{{pro_msg}}"></loading-progress-view>
            </list-item>
          </list>
        </refresh>

      </div>

      <div class="post-comment">

        <div class="btn-show">
          <text @click="onChangeCommentBar">{{commentBtnText}}</text>
        </div>

        <div show="{{showCommentBar}}" class="post-comment-input">
          <textarea id="comment-textarea" type="text" class="comment-content" @change="onChangeCommentContent"  placeholder="comment st." value="{{commentContent}}"> </textarea>
          <input type="button" class="comment-btn-send" value="{{commentSend}}" @click="onSendComment">

        </div>

      </div>

    </stack>


  </div>
</template>




<style lang="less">

  .post-page{
    flex-direction: column;
    justify-content: center;
    align-items: center;

    stack{
      flex-direction: column;
      height: 100%;
      align-items: flex-end;
      justify-content: flex-end;
    }

    .post-content{
        height: 100%;
        flex-direction: column;


          .title{
            width: 100%;
            background-color: #ffbc4d;
            color: #ffffff;
            padding: 10px;
            font-size: 40px;
          }

          refresh{

            height :80%;


            image{
              resize-mode : contain;
            }


            .avatar{
                width: 64px;
                height :64px;
                margin: 8px;
            }


            .header-text{
              flex-direction: column;


              .name {
                width: 70%;
                color: #aabcd4;
                font-size: 30px;
              }

              .date{
                font-size: 30px;
                color: #ffbc4d;
              }
            }


            .content{
              margin-left: 72px;
            }

            .reply-quote{
              background-color: #eeeeee;
              padding: 16px;
              border-radius: 5px;
              border-color: #eeeeee;
              border-width: 5px;
              text{
                color:#333333;
              }
            }

            .reply-footer{
              width: 100%;
              flex-direction: column;

              .reply-action{
                  width: 100%;
                  flex-direction: row;
                  justify-content: flex-end;
                  align-items: flex-end;


                  .btn-action{
                    flex-direction: row;
                    margin-right :16px;

                    background-color: #00bcd4;
                    height: 40px;
                    width: 40px;
                    border-width: 20px;

                    border-color: #00bcd4;
                    border-radius: 20px;

                    text{
                      color: #ffffff;
                      flex-grow: 1;
                      text-align: center;
                    }

                    .close-action-bar{
                      background-color: #ffffff;
                      height: 30px;
                      width: 30px;
                      border-width: 20px;

                      border-color: #ffffff;
                      border-radius: 15px;
                    }
                  }

                  .active{
                    width: 200px;
                    height:80px;
                    border-width: 10px;
                  }

              }


              .reply-exinfo{
                flex-direction: row;

                      .reply-support{
                          flex-grow: 1;
                          color: #ffcde7;
                      }


                      .reply-position{
                          flex-grow: 1;
                          text-align: right;
                          margin: 8px;
                      }
              }


              .line{
                height: 1px;
                width: 90%;
                background-color: #ffbc4d;
                margin: 20px;
              }
            }


            .topic-footer{
              height: 1px;
              width: 90%;
              background-color: #ffbc4d;
              margin: 20px;
            }

            a{
              color:#00bcd4;
            }
          }


    }


    .post-comment{

      width: 100%;
      height: 500px;


      .btn-show{
        height: 100px;
        margin-top: 400px;



        text{

          padding: 10px;
          color: #ffffff;
          background-color:#00bcd4;

          border-top-width : 16px;
          border-right-width: 16px;
          border-radius: 16px;
          background-color: #00bcd4;
          margin-left: -16px;
          padding-left: 24px;

        }


      }


      .post-comment-input{
        width: 100%;
        margin-left: 16px;


          .comment-btn-send{

            flex-grow: 1;
            border-left-width : 8px;
            border-top-width : 8px;
            border-bottom-width: 8px;
            background-color: #ffbc4d;
            border-radius: 4px;
            margin-left: 8px;
            color: #ffffff;

          }

          .comment-content{

            margin-right: 8px;
            flex-grow: 4;
            background-color: #ffffff;
            color: #333333;
            padding: 8px;
            border-left-width : 18px;
            border-top-width : 18px;
            background-color: #ffffff;
            border-radius: 8px;

          }


      }


    }



  }

</style>


<script>

  import PostApi from '../../Common/PostApi'
  import prompt from '@system.prompt'
  import DateUtil from '../../Common/DateUtil'

  export default{
    protected :{
      topicid : "id",
      topic :{
        title :"",
        content : []
      },
      list :[],
      canLoadMore :true,
      isRefreshing :false,
      page : 0,
      pro_show : true,
      pro_msg : "",
      commentSend : "send",
      commentContent : "",
      showCommentBar : false,
      commentBtnText : "评论",
      commentReplyId : 0

    },
    onInit(){

      var app = this.$app

      PostApi.init(app)

    },
    onShow(){
        this.refresh()
    },
    onScrollBottom(){
      this.loadMore()
    },
    onChangeCommentContent(e){
      this.commentContent = e.value
    },
    onClickReplyAction(index){
      var re = this.list[index]
      this.list[index].showAct = this.list[index].showAct  ? false : true

    },
    onChangeCommentBar(){
      this.showCommentBar = this.showCommentBar == true ? false : true
    },
    onSendComment(){

      if(this.commentBtnText == "评论"){

          PostApi.comment(this.commentContent,this.topic.topic_id,
            function (data){

              const re = JSON.parse(data.data)

              prompt.showToast({
                message:re.errcode
              })

              this.commentContent = ""

              this.onChangeCommentBar()

            }.bind(this))
      } else {

        console.log("send reply comment "+ this.commentReplyId +"topic "+this.topic.topic_id);
        PostApi.replyComment(this.commentContent,this.topic.topic_id,this.commentReplyId,
          function(data){

              const re = JSON.parse(data.data)

              prompt.showToast({
                message:re.errcode
              })

              this.commentContent = ""
              this.onChangeCommentBar()

              this.commentBtnText = "评论"

          }.bind(this))
      }

    },
    replyComment(index){
      this.commentReplyId = this.list[index].reply_posts_id
      this.commentBtnText = "回复"
      this.onChangeCommentBar()
      this.onClickReplyAction(index)

    },
    render(){
      this.renderTopic()
    },
    renderTopic(json){
      json.topic.create_date = DateUtil.convertTime(json.topic.create_date)

      this.topic = json.topic
      this.renderTopicComplete()
    },
    renderTopicComplete(){
      this.loadMore()
    },
    renderReply(json){

      if(json.list != null && json.list.length != 0){


        for (let  x in json.list){
          json.list[x].posts_date = DateUtil.convertTime(json.list[x].posts_date)
          json.list[x].showAct = false
        }
        this.list = json.list
        this.renderReplyComplete()
      }  else {
       this.renderError("没有更多了")
       this.loadMoreComplete()
      }

      this.refreshComplete()


    },
    renderMoreReply(json){

      if(json.list != null && json.list.length != 0){

        for (let x in json.list){
          json.list[x].posts_date = DateUtil.convertTime(json.list[x].posts_date)
          json.list[x].showAct = false
        }
        this.list = this.list.concat(json.list)

        this.renderReplyComplete()
      } else {
        this.renderError("没有更多了")
        this.loadMoreComplete()
      }
    },
    renderReplyComplete(){
      // prompt.showToast({
      //   message : "加载新的回复"
      // })

      this.loadMoreComplete()
    },
    renderError(msg){
      prompt.showToast({
        message : msg
      })
    },
    refresh(){
      this.fetchTopic()
    },
    loadMore(){
      if(this.canLoadMore){
        this.canLoadMore = false

        this.page = this.page+ 1
        this.fetchReplys()

      }
    },
    loadMoreComplete(){
      this.canLoadMore = true
    },
    renderProgress(tag){

        this.$broadcast(tag, { params: 'aaa' })
    },
    fetchTopic(){

        PostApi.fetchPostDetail(1,this.topicid,
          function(data){

            let json = JSON.parse(data.data)
            if(json.rs == 1){
              this.renderTopic(json)

              if(json.has_next == 0){
                this.renderProgress("has_not_next")
              }


            } else {
              this.renderError(json.errcode)
            }

          }.bind(this),
          function(data,code){
            console.log(data);
          })

    },
    fetchReplys(){

            PostApi.fetchPostDetail(this.page,this.topicid,
              function(data){

                let json = JSON.parse(data.data)
                if(json.rs == 1){
                  if(this.page == 1){
                    this.renderReply(json)
                  }else{
                    this.renderMoreReply(json)
                  }
                } else {
                  this.renderError(json.errcode)
                }

              }.bind(this),
              function(data,code){
                console.log(data);
              })

    },
    goTop(e){
      console.log(JSON.stringify(e));
      //e.target.scrollTo(1)
    },
    reqRefresh(e){
      this.isRefreshing = e.refreshing

      this.page = 1
      this.fetchReplys()
    },
    refreshComplete(){
      if(this.isRefreshing){
        this.isRefreshing = false

        prompt.showToast({
            message: 'refresh complete'
        })
      }

    }
  }

</script>
